/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var d=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var M=Object.getOwnPropertyNames;var W=Object.prototype.hasOwnProperty;var b=(r,l)=>{for(var a in l)d(r,a,{get:l[a],enumerable:!0})},j=(r,l,a,i)=>{if(l&&typeof l=="object"||typeof l=="function")for(let s of M(l))!W.call(r,s)&&s!==a&&d(r,s,{get:()=>l[s],enumerable:!(i=I(l,s))||i.enumerable});return r};var k=r=>j(d({},"__esModule",{value:!0}),r);var L={};b(L,{default:()=>p});module.exports=k(L);var x=require("obsidian"),p=class extends x.Plugin{constructor(){super(...arguments);this.treeProcessor=(a,i)=>{var u;let s=a.split(`
`),h=1/0;for(let t of s)if(t.trim()!==""){let n=t.match(/^([\t ]*)/);n&&n[1].length<h&&(h=n[1].length)}let f="";h!==1/0&&h>0&&(f=((u=s.find(t=>t.trim()!==""))==null?void 0:u.slice(0,h))||"");let m=s.map(t=>t.startsWith(f)?t.slice(f.length):t).map(t=>{let n=t.match(/^([\t ]*)((?:[-*+])|\d+\.)\s+(.*)$/);if(n){let c=n[1],e=(c.match(/\t/g)||[]).length,y=(c.match(/ /g)||[]).length,v=e+Math.floor(y/4);return v++,{level:v,leadingWhitespace:"",text:n[3]}}let o=t.match(/^(=+)\s?(.*)$/);if(o){let c=o[1].length,e=o[2];return{level:c,leadingWhitespace:"",text:e}}return{level:0,leadingWhitespace:"",text:t}}),g=[],$=m.map((t,n)=>{let o=!0;for(let e=n+1;e<m.length&&!(m[e].level<t.level);e++)if(m[e].level===t.level){o=!1;break}g[t.level]=o,g.length=t.level+1;let c="";for(let e=1;e<t.level;e++)c+=g[e]?"    ":"\u2502   ";return t.level>0&&(c+=o?"\u2514\u2500\u2500 ":"\u251C\u2500\u2500 "),`${f}${t.leadingWhitespace}${c}${t.text}`}).join(`
`);i.empty(),i.createEl("pre").createEl("code").setText($)}}async onload(){this.registerMarkdownCodeBlockProcessor("tree",this.treeProcessor)}};

/* nosourcemap */