{"path":"attached/files/Session_5_Curve Fitting_3.pdf","text":"NUMERICAL METHODS WEEK 5NUMERICAL METHODS WEEK 5 CURVE FITTING 3CURVE FITTING 3 We continue with Curve Fitting. This week . Learning outcomes: Understand when you would use interpolation and when you would use regression. Be aware of most common interpolation methods. Implement and use Newton Divided Difference and Lagrange polynomials for interpolation. MATT WATKINS MWATKINS@LINCOLN.AC.UKMATT WATKINS MWATKINS@LINCOLN.AC.UK interpolation (https: //en.wikipedia.org/wiki/Interpolation) WHAT IS INTERPOLATION?WHAT IS INTERPOLATION? For example, suppose we have a table like this, which gives some values of an unknown function f Interpolation provides a means of estimating the function at intermediate points, such as . There are many different interpolation methods, some of which we'll look at. Some of the concerns to take into account when choosing an appropriate algorithm are: How accurate is the method? How expensive is it? x 0 1 2 3 4 5 6 f(x) 0.0000 0.8415 0.9093 0.1411 −0.7658 −0.9589 −0.2794 x = 2.5 LINEAR INTERPOLATIONLINEAR INTERPOLATION If we have two points we can draw a straightline between themJSXGraph v1.4.6 Copyright (C) see https://jsxgraph.org 2 3 4 5 6 7 8 9 A LINEAR INTERPOLATIONLINEAR INTERPOLATION If the function is not a straightline, linear interpolation will be an approximation. The quality of the approximation will depend on how far apart the points are: Thin line is ; thick line is the \u0000t; dotted line is the gradient; dashed line is the curvature.JSXGraph v1.4.6 Copyright (C) see https://jsxgraph.org 1 2 3 4 5 6 7 8 9 0.5 1 1.5 2 2.5 y = ln x 6.00 point 1 point 2 approx exact – o + ← ↓ ↑ → POLYNOMIAL INTERPOLATIONPOLYNOMIAL INTERPOLATION Approximation can be improved by using a polynomial. We can \u0000t a polynomial of order through points using brute force and a system of linear equations. n − 1 N LINEAR INTERPOLATIONLINEAR INTERPOLATION Geometrically, the slopes should be the same: . Or rearranged: This should remind you of the \u0000rst term in a Taylor series. It is sometimes referred to as a 'lerp'. = , y − y0 x − x0 −y1 y0 −x1 x0 y = + (x − ) = ,y0 x0 −y1 y0 −x1 x0 ( − x) + (x − )y0 x1 y1 x0 −x1 x0 Thin line is ; thick line is the \u0000t; dotted line is the gradient; dashed line is the curvature.JSXGraph v1.4.6 Copyright (C) see https://jsxgraph.org 1 2 3 4 5 6 0.5 1 1.5 2 2.5 y = ln x 4.00 point 1 point 2 point 3 approx exact – o + ← ↓ ↑ → NEWTON'S DIVIDED DIFFERENCE INTERPOLATIONNEWTON'S DIVIDED DIFFERENCE INTERPOLATION The \u0000rst divided difference is just the linear interpolation Where we have written as to make the next formulae look more similar to those above. These are the \u0000rst divided differences. Higher divided differences can be built up from the lower divided differences: f[ , ] =x0 x1 f( ) − f( )x1 x0 −x1 x0 f[ , ] =x1 x2 f( ) − f( )x2 x1 −x2 x1 yi f( )xi f[ , , ] =x0 x1 x2 f[ , ] − f[ , ]x1 x2 x0 x1 −x2 x0 f[ , , ] =x1 x2 x3 f[ , ] − f[ , ]x2 x3 x1 x2 −x3 x1 These terms can be related to higher order terms of Taylor's series. The divided difference interpolation polynomial can be written as It is possible to truncate the polynomial at any term, and estimate the error, from the next term in the series. P (x) = f( ) + (x − )f[ , ] + (x − )(x − )f[ , , ] + ⋯ + (x − ) ⋯ (x − fx0 x0 x0 x1 x0 x1 x0 x1 x2 x0 xn−1 LAGRANGE INTERPOLATING POLYNOMIALSLAGRANGE INTERPOLATING POLYNOMIALS One form of the Interpolating polynomials is named after Lagrange. Notice \u0000t is excellent in the centre of the data points, but degrades at the edges Should not be used for extrapolation - zoom out to see! Add point Thin line is ; thick line is the \u0000t; dotted line is the gradient; dashed line is the curvature.JSXGraph v1.4.6 Copyright (C) see https://jsxgraph.org 5−5 0.5 1 1.5 −0.5 −1 −1.5 y = sin x x A B – o + ← ↓ ↑ → LAGRANGE INTERPOLATING POLYNOMIALSLAGRANGE INTERPOLATING POLYNOMIALS Examine the formula below closely - see that at each data point location , all terms will vanish except the The denominator then just ensures the correct value is given. - Determine the interpolating polynomial for the data Write a code to perform interpolation using Lagrange Interpolating Polynomials. Is the polynomial the same as you would get using Newton's Divided Difference interpolation? xi i th p(x) = + + … + (x − )(x − ) ⋯ (x − )x1 x2 xn ( − )( − ) ⋯ ( − )x0 x1 x0 x2 x0 xn y0 (x − )(x − ) ⋯ (x − )x0 x2 xn ( − )( − ) ⋯ ( − )x1 x0 x1 x2 x1 xn y1 (x − ( −xn = ∑ i=0 n ⎛ ⎝ ⎜⎜∏ j≠i 0≤j≤n x − xj −xi xj ⎞ ⎠ ⎟⎟ yi yi (0, 1), (1, 3), (3, 55) SPLINESSPLINES Instead of \u0000tting a global, complex high-order polynomial through many points - join many simple functions together Splines typically require that the functions go through the points and the gradient and curvature are smoothly interpolated Requirements that the polynomials (or generally functions of \u0000nite support) Pass throught the data points - provides equations Neighbouring polynomials have the same gradients at the points they overlap - provides equations For cubic functions, neighbouring polynomials have the same curvature at the points that they overlap - provides equations For quadratic or cubic splines add 1 or 2 boundary conditions - typically curvatures = 0 at starting points These provide suf\u0000cient conditions to determine the coef\u0000cients of the polynomials - another linear system of equations to solve. n 2n n − 1 n − 1 n LINEAR SPLINESLINEAR SPLINES Linear spline interpolation on a set of data points is de\u0000ned as the concatenation of linear interpolants between each pair of data points. This results in a continuous curve, with a discontinuous derivative. -1 0 1 1 2 3 4 5 6 The spline has a separate linear equation between each pair of points - like Excel straightline plot. ( , ), ( , ), . . . , ( , )x0 y0 x1 y1 xn yn TRIGONOMETRIC INTERPOLATIONTRIGONOMETRIC INTERPOLATION We can use our general least squared \u0000tting to \u0000t a set of basis functions to our data. This provides an approximate analytical form for the data over the whole range of the data. Best example uses trigonometric functions where is . So, if \u0000tting data given between -1 0 and 1 0 , would equal . Works best for continuous functions that have the same values and gradients at either end of the range \u0000tted. Avoids wild oscillations observed for higher order polynomial \u0000ts. = + sin (nω ) + cos (nω )yi a0 ∑ n=1 n=N bn xi ∑ n=1 n=N an xi ω 2π/(range of x) ω 2π/20 TRIGONOMETRIC INTERPOLATION EXAMPLETRIGONOMETRIC INTERPOLATION EXAMPLE Fit data taken from the function − 1 1+exp x2 i m p o r t n u m p y a s n p i m p o r t m a t p l o t l i b . p y p l o t a s p l t % m a t p l o t l i b i n l i n e # m a k e d a t a - f r o m - 1 0 t o 1 0 w i t h 1 0 0 p o i n t s x = n p . l i n s p a c e ( - 1 0 , 1 0 , 1 0 0 ) y = - 1 / ( 1 + n p . e x p ( x * * 2 ) ) p l t . p l o t ( x , y ) ; p l t . t i t l e ( r ' $ y = - \\ f r a c { 1 } { 1 + \\ e x p { x ^ 2 } } $ ' ) p l t . s a v e f i g ( ' p l o t y 1 o v e r e x p . p n g ' ) h i g h l i g h t : h l j s p y t h o n Build z matrix and \u0000t to 1 0 terms # n u m b e r o f t e r m s ( i n c l u d i n g c o n s t a n t ) N = 1 0 # b u i l d z m a t r i x z = n p . z e r o s ( ( x . s i z e , 2 * N - 1 ) ) z [ : , 0 ] = 1 f o r n i n r a n g e ( 1 , N ) : z [ : , n ] = n p . c o s ( 2 * n p . p i / 2 0 * n * x ) z [ : , n + N - 1 ] = n p . s i n ( 2 * n p . p i / 2 0 * n * x ) # s e t u p l i n e a r e q u a t i o n s z T z = n p . d o t ( z . t r a n s p o s e ( ) , z ) z T y = n p . d o t ( z . t r a n s p o s e ( ) , y ) # s o l v e MULTIDIMENSIONAL INTERPOLATIONMULTIDIMENSIONAL INTERPOLATION Maybe our function is in 2 or more dimensions and now we have data in the form of triples and want to know at a point not in our data set. Most common application is in image processing. original image sides doubled interpolated non interpolated f = f(x, y) ( , , f( , ))xi yi xi yi f(x, y) This is a very crude digital zoom. BILINEAR INTERPOLATIONBILINEAR INTERPOLATION First, linearly interpolate in direction Then interpolate in direction x f(x, )y1 f(x, )y2 ≈ f( ) + f( ), − xx2−x2 x1 Q11 x − x1 −x2 x1 Q21 ≈ f( ) + f( ). − xx2−x2 x1 Q12 x − x1 −x2 x1 Q22 y f(x, y) ≈ f(x, ) + f(x, ) − yy2−y2 y1 y1 y − y1 −y2 y1 y2 f(x, y) ≈ f(x, ) + f(x, ) − yy2−y2 y1 y1 y − y1 −y2 y1 y2 = ( f( ) + f( )) + ( f( ) + − yy2−y2 y1 − xx2−x2 x1 Q11 x − x1 −x2 x1 Q21 y − y1 −y2 y1 − xx2−x2 x1 Q12 x − x1 −x2 x1 BILINEAR INTERPOLATION - QUESTIONBILINEAR INTERPOLATION - QUESTION Suppose you have measured temperatures at a number of positions of a rectangular heated plate: 2 2 6 0 2 6 5 5 9 1 5 7 .5 9 6 7 0 - Use bilinear interpolation to \u0000nd the temperature at - Write a code to perform a general bilinear interpolation. Test it on a simple functions, such as , being careful of the domain you work in. xi yi T ( , )xi yi (5.25, 4.8) f(x, y) = xy SUMMARY AND FURTHER READINGSUMMARY AND FURTHER READING You should be reading additional material to provide a solid background to what we do in class Reading: Capra and Canale, introduction to part 5 and chapter 1 8 . All the textbooks contain sections on interpolation, for instance chapters 3 of . Numerical Recipes (http: //www.nrbook.com/a/bookcpdf.php) SNAKESNAKE Use the arrow keys start gameJSXGraph v1.4.6 Copyright (C) see https://jsxgraph.org","libVersion":"0.5.0","langs":""}